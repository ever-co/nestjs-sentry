{"version":3,"file":"sentry.service.js","sourceRoot":"/","sources":["services/sentry.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable, Logger, Optional } from '@nestjs/common';\r\nimport { Options, Client } from '@sentry/types';\r\nimport * as Sentry from '@sentry/node';\r\n\r\nimport { SENTRY_MODULE_OPTIONS } from '../common/sentry.constants';\r\nimport { SentryModuleOptions } from '../interfaces/sentry-options.interface';\r\n\r\nexport abstract class SentryBaseService extends Logger {}\r\n\r\n@Injectable()\r\nexport class SentryService extends Logger {\r\n    app: string = '@ntegral/nestjs-sentry: ';\r\n    constructor(\r\n        @Inject(SENTRY_MODULE_OPTIONS)\r\n        private readonly options?: SentryModuleOptions,\r\n        @Optional() prior?: SentryService\r\n      ) {\r\n        super();\r\n        if (!(options && options.dsn)) {\r\n          // console.log('options not found. Did you use SentryModule.forRoot?');\r\n          return;\r\n        }\r\n\r\n        const { debug, integrations = [], ...sentryOptions } = options;\r\n        Sentry.init({\r\n          ...sentryOptions,\r\n          debug: debug === true ? false : debug,\r\n          integrations: [\r\n            new Sentry.Integrations.OnUncaughtException({\r\n              onFatalError: (async (err) => {\r\n                // console.error('uncaughtException, not cool!')\r\n                // console.error(err);\r\n                if (err.name === 'SentryError') { console.log(err); } else { (Sentry.getCurrentHub().getClient<Client<Options>>() as Client<Options>).captureException(err); process.exit(1); }\r\n              }),\r\n            }),\r\n            new Sentry.Integrations.OnUnhandledRejection({mode: 'warn'}),\r\n            ...integrations\r\n          ]\r\n        });\r\n      }\r\n\r\n  log(message: string, context?: string) {\r\n    message = `${this.app} ${message}`;\r\n    try {\r\n      Sentry.captureMessage(message, Sentry.Severity.Log);\r\n      super.log(message, context);\r\n    } catch (err) {  }\r\n  }\r\n\r\n  error(message: string, trace?: string, context?: string) {\r\n    message = `${this.app} ${message}`;\r\n    try {\r\n      Sentry.captureMessage(message, Sentry.Severity.Error);\r\n      super.error(message, trace, context);\r\n    } catch (err) {  }\r\n  }\r\n\r\n  warn(message: string, context?: string) {\r\n    message = `${this.app} ${message}`;\r\n    try {\r\n      Sentry.captureMessage(message, Sentry.Severity.Warning);\r\n      super.warn(message, context);\r\n    } catch (err) {  }\r\n  }\r\n\r\n  debug(message: string, context?: string) {\r\n    message = `${this.app} ${message}`;\r\n    try {\r\n      Sentry.captureMessage(message, Sentry.Severity.Debug);\r\n      super.debug(message, context);\r\n    } catch (err) {  }\r\n  }\r\n\r\n  verbose(message: string, context?: string) {\r\n    message = `${this.app} ${message}`;\r\n    try {\r\n      Sentry.captureMessage(message, Sentry.Severity.Info);\r\n      super.verbose(message, context);\r\n    } catch (err) {  }\r\n  }\r\n\r\n  instance() {\r\n    return Sentry;\r\n  }\r\n}"]}